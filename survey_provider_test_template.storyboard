<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="2.0" toolsVersion="3084" systemVersion="12D78" targetRuntime="iOS.CocoaTouch.iPad" propertyAccessControl="none" initialViewController="2">
    <dependencies>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="2083"/>
    </dependencies>
    <scenes>
        <!--Switched Image View Controller-->
        <scene sceneID="5">
            <objects>
                <viewController storyboardIdentifier="0" id="2" customClass="SwitchedImageViewController" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="3">
                        <rect key="frame" x="0.0" y="20" width="1024" height="748"/>
                        <autoresizingMask key="autoresizingMask" flexibleMinX="YES" flexibleMaxX="YES" flexibleMinY="YES" flexibleMaxY="YES"/>
                        <subviews>
                            <label opaque="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="left" text="Provider test label text" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" id="SVj-r0-ZGy">
                                <rect key="frame" x="9" y="-58" width="1006" height="340"/>
                                <autoresizingMask key="autoresizingMask" widthSizable="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" name="Avenir-Medium" family="Avenir" pointSize="30"/>
                                <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
                                <nil key="highlightedColor"/>
                            </label>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" id="TSn-AL-JrJ">
                                <rect key="frame" x="-116" y="87" width="66" height="66"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="15"/>
                                <state key="normal" image="green_arrow_w_shadow.png">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="pressedSatisfactionReplayButton:" destination="2" eventType="touchUpInside" id="eWh-y3-Fdc"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" showsTouchWhenHighlighted="YES" lineBreakMode="middleTruncation" id="SQZ-QD-DER">
                                <rect key="frame" x="201" y="198" width="86" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="15"/>
                                <state key="normal" title="Button" image="pmnr_placeholder.png">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider1ButtonPressed:" destination="2" eventType="touchUpInside" id="yLU-TT-65l"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="center" contentHorizontalAlignment="left" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="wordWrap" id="hV1-sr-Kzo">
                                <rect key="frame" x="315" y="198" width="523" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" name="Helvetica-Bold" family="Helvetica" pointSize="22"/>
                                <inset key="contentEdgeInsets" minX="20" minY="0.0" maxX="0.0" maxY="0.0"/>
                                <state key="normal" title="Provider 1 Button Text Text Text Text Text Text">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider1ButtonPressed:" destination="2" eventType="touchUpInside" id="Gwc-nQ-07T"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" showsTouchWhenHighlighted="YES" lineBreakMode="middleTruncation" id="bZL-x0-4Ud">
                                <rect key="frame" x="201" y="288" width="86" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="15"/>
                                <state key="normal" title="Button" image="pmnr_placeholder.png">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider2ButtonPressed:" destination="2" eventType="touchUpInside" id="o3q-TQ-awR"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="center" contentHorizontalAlignment="left" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="wordWrap" id="M7a-xp-dBf">
                                <rect key="frame" x="315" y="289" width="523" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="21"/>
                                <inset key="contentEdgeInsets" minX="20" minY="0.0" maxX="0.0" maxY="0.0"/>
                                <state key="normal" title="Provider 2 Button Text Text Text Text Text Text">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider2ButtonPressed:" destination="2" eventType="touchUpInside" id="5os-gX-NjQ"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" showsTouchWhenHighlighted="YES" lineBreakMode="middleTruncation" id="0gU-9k-Unf">
                                <rect key="frame" x="201" y="379" width="86" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="15"/>
                                <state key="normal" title="Button" image="pmnr_placeholder.png">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider3ButtonPressed:" destination="2" eventType="touchUpInside" id="49b-qI-RMJ"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="wordWrap" id="bo9-5X-E13">
                                <rect key="frame" x="315" y="379" width="523" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="21"/>
                                <inset key="contentEdgeInsets" minX="20" minY="0.0" maxX="0.0" maxY="0.0"/>
                                <state key="normal" title="Provider 3 Button Text Text Text Text Text Text">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider3ButtonPressed:" destination="2" eventType="touchUpInside" id="8BG-cx-jpA"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" showsTouchWhenHighlighted="YES" lineBreakMode="middleTruncation" id="KY9-zX-7Ys">
                                <rect key="frame" x="201" y="470" width="87" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="15"/>
                                <state key="normal" title="Button" image="pmnr_placeholder.png">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider4ButtonPressed:" destination="2" eventType="touchUpInside" id="2cn-Di-a8J"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="wordWrap" id="TcB-bc-QLY">
                                <rect key="frame" x="315" y="470" width="523" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="21"/>
                                <inset key="contentEdgeInsets" minX="20" minY="0.0" maxX="0.0" maxY="0.0"/>
                                <state key="normal" title="Provider 4 Button Text Text Text Text Text Text">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider4ButtonPressed:" destination="2" eventType="touchUpInside" id="nPI-5Q-8Qi"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" showsTouchWhenHighlighted="YES" lineBreakMode="middleTruncation" id="voA-J1-335">
                                <rect key="frame" x="201" y="561" width="87" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="15"/>
                                <state key="normal" title="Button" image="dont_know_stroke.png">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider5ButtonPressed:" destination="2" eventType="touchUpInside" id="pyl-lK-EHQ"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" buttonType="roundedRect" lineBreakMode="wordWrap" id="sVo-Iy-aIM">
                                <rect key="frame" x="315" y="561" width="523" height="67"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <fontDescription key="fontDescription" type="boldSystem" pointSize="21"/>
                                <inset key="contentEdgeInsets" minX="20" minY="0.0" maxX="0.0" maxY="0.0"/>
                                <state key="normal" title="I Don't Know">
                                    <color key="titleColor" red="0.19607843459999999" green="0.30980393290000002" blue="0.52156865600000002" alpha="1" colorSpace="calibratedRGB"/>
                                    <color key="titleShadowColor" white="0.5" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <state key="highlighted">
                                    <color key="titleColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                                </state>
                                <connections>
                                    <action selector="provider5ButtonPressed:" destination="2" eventType="touchUpInside" id="a5a-xp-CVB"/>
                                </connections>
                            </button>
                        </subviews>
                        <color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/>
                        <simulatedOrientationMetrics key="simulatedOrientationMetrics" orientation="landscapeRight"/>
                    </view>
                    <simulatedOrientationMetrics key="simulatedOrientationMetrics" orientation="landscapeRight"/>
                    <connections>
                        <outlet property="currentReplayButton" destination="TSn-AL-JrJ" id="VXH-Pu-NHL"/>
                        <outlet property="provider1ImageButton" destination="SQZ-QD-DER" id="8Dm-D1-x6O"/>
                        <outlet property="provider1TextButton" destination="hV1-sr-Kzo" id="eIN-g7-PFm"/>
                        <outlet property="provider2ImageButton" destination="bZL-x0-4Ud" id="3ux-yK-ebm"/>
                        <outlet property="provider2TextButton" destination="M7a-xp-dBf" id="FpG-LT-6j8"/>
                        <outlet property="provider3ImageButton" destination="0gU-9k-Unf" id="nXh-SL-tOF"/>
                        <outlet property="provider3TextButton" destination="bo9-5X-E13" id="NSh-i3-bBS"/>
                        <outlet property="provider4ImageButton" destination="KY9-zX-7Ys" id="eWJ-TK-FBQ"/>
                        <outlet property="provider4TextButton" destination="TcB-bc-QLY" id="jST-Ca-1Hd"/>
                        <outlet property="provider5ImageButton" destination="voA-J1-335" id="2bF-SP-cza"/>
                        <outlet property="provider5TextButton" destination="sVo-Iy-aIM" id="U7P-HD-46O"/>
                        <outlet property="providerTestLabel" destination="SVj-r0-ZGy" id="Jd4-Ri-V5Y"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="4" userLabel="First Responder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="96" y="-1091"/>
        </scene>
    </scenes>
    <resources>
        <image name="dont_know_stroke.png" width="194" height="145"/>
        <image name="green_arrow_w_shadow.png" width="131" height="131"/>
        <image name="pmnr_placeholder.png" width="350" height="466"/>
    </resources>
    <classes>
        <class className="SwitchedImageViewController" superclassName="UIViewController">
            <source key="sourceIdentifier" type="project" relativePath="./Classes/SwitchedImageViewController.h"/>
            <relationships>
                <relationship kind="action" name="agreeButtonPressed:"/>
                <relationship kind="action" name="agreeFaceButtonPressed:"/>
                <relationship kind="action" name="disagreeButtonPressed:"/>
                <relationship kind="action" name="disagreeFaceButtonPressed:"/>
                <relationship kind="action" name="doesNotApplyFaceButtonPressed:"/>
                <relationship kind="action" name="faceButtonPressed:"/>
                <relationship kind="action" name="goal10ButtonPressed:"/>
                <relationship kind="action" name="goal1ButtonPressed:"/>
                <relationship kind="action" name="goal2ButtonPressed:"/>
                <relationship kind="action" name="goal3ButtonPressed:"/>
                <relationship kind="action" name="goal4ButtonPressed:"/>
                <relationship kind="action" name="goal5ButtonPressed:"/>
                <relationship kind="action" name="goal6ButtonPressed:"/>
                <relationship kind="action" name="goal7ButtonPressed:"/>
                <relationship kind="action" name="goal8ButtonPressed:"/>
                <relationship kind="action" name="goal9ButtonPressed:"/>
                <relationship kind="action" name="goalRatingSegmentedControlIndexChanged:" candidateClass="UISegmentedControl"/>
                <relationship kind="action" name="helpfulSegmentedControlIndexChanged:" candidateClass="UISegmentedControl"/>
                <relationship kind="action" name="module1ButtonPressed:"/>
                <relationship kind="action" name="module2ButtonPressed:"/>
                <relationship kind="action" name="neutralFaceButtonPressed:"/>
                <relationship kind="action" name="noButtonPressed:"/>
                <relationship kind="action" name="okButtonPressed:"/>
                <relationship kind="action" name="playFourthMovie:"/>
                <relationship kind="action" name="playMovie:"/>
                <relationship kind="action" name="playSecondMovie:"/>
                <relationship kind="action" name="playThirdMovie:"/>
                <relationship kind="action" name="pressedSatisfactionReplayButton:"/>
                <relationship kind="action" name="provider1ButtonPressed:"/>
                <relationship kind="action" name="provider2ButtonPressed:"/>
                <relationship kind="action" name="provider3ButtonPressed:"/>
                <relationship kind="action" name="provider4ButtonPressed:"/>
                <relationship kind="action" name="provider5ButtonPressed:"/>
                <relationship kind="action" name="segmentedControlIndexChanged:" candidateClass="UISegmentedControl"/>
                <relationship kind="action" name="segmentedControlPressedWithIndex:"/>
                <relationship kind="action" name="stopMovie:"/>
                <relationship kind="action" name="stronglyAgreeFaceButtonPressed:"/>
                <relationship kind="action" name="stronglyDisagreeFaceButtonPressed:"/>
                <relationship kind="action" name="subclinic1ButtonPressed:"/>
                <relationship kind="action" name="subclinic2ButtonPressed:"/>
                <relationship kind="action" name="subclinic3ButtonPressed:"/>
                <relationship kind="action" name="subclinic4ButtonPressed:"/>
                <relationship kind="action" name="subclinic5ButtonPressed:"/>
                <relationship kind="action" name="switchChanged:" candidateClass="UISwitch"/>
                <relationship kind="action" name="yesButtonPressed:"/>
                <relationship kind="outlet" name="agreeButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="chooseModuleLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="chooseModuleText" candidateClass="NSString"/>
                <relationship kind="outlet" name="currentPromptLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="currentReplayButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="currentSatisfactionLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="currentSatisfactionString" candidateClass="NSString"/>
                <relationship kind="outlet" name="disagreeButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="doesNotApplyButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="extraModule1Label" candidateClass="UILabel"/>
                <relationship kind="outlet" name="extraModule1Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="extraModule2Label" candidateClass="UILabel"/>
                <relationship kind="outlet" name="extraModule2Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="extraNoLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="extraNoText" candidateClass="NSString"/>
                <relationship kind="outlet" name="extraYesLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="extraYesText" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal10Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal10TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal1Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal1TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal2Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal2TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal3Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal3TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal4Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal4TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal5Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal5TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal6Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal6TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal7Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal7TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal8Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal8TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goal9Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="goal9TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="goalChooseLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="goalChooseText" candidateClass="NSString"/>
                <relationship kind="outlet" name="goalRateLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="goalRateText" candidateClass="NSString"/>
                <relationship kind="outlet" name="goalRating" candidateClass="UISegmentedControl"/>
                <relationship kind="outlet" name="helpfulLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="helpfulRating" candidateClass="UISegmentedControl"/>
                <relationship kind="outlet" name="helpfulText" candidateClass="NSString"/>
                <relationship kind="outlet" name="iv" candidateClass="UIImageView"/>
                <relationship kind="outlet" name="module1Badge" candidateClass="UIImageView"/>
                <relationship kind="outlet" name="module1Button" candidateClass="UIButton"/>
                <relationship kind="outlet" name="module2Badge" candidateClass="UIImageView"/>
                <relationship kind="outlet" name="module2Button" candidateClass="UIButton"/>
                <relationship kind="outlet" name="neutralButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="newAgreeButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="newAgreeDisagreeLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="newAgreeDisagreeText" candidateClass="NSString"/>
                <relationship kind="outlet" name="newDisagreeButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="newNoButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="newYesButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="newYesNoLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="newYesNoText" candidateClass="NSString"/>
                <relationship kind="outlet" name="okButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider1ImageButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider1ImageThumb" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider1Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider1TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider2ImageButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider2ImageThumb" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider2Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider2TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider3ImageButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider3ImageThumb" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider3Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider3TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider4ImageButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider4ImageThumb" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider4Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="provider4TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider5ImageButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="provider5TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="providerTestLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="providerTestText" candidateClass="NSString"/>
                <relationship kind="outlet" name="s" candidateClass="UISwitch"/>
                <relationship kind="outlet" name="satisfactionRating" candidateClass="UISegmentedControl"/>
                <relationship kind="outlet" name="stronglyAgreeButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="stronglyDisagreeButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="subclinic1Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="subclinic1TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="subclinic2Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="subclinic2TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="subclinic3Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="subclinic3TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="subclinic4Text" candidateClass="NSString"/>
                <relationship kind="outlet" name="subclinic4TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="subclinic5TextButton" candidateClass="UIButton"/>
                <relationship kind="outlet" name="subclinicTestLabel" candidateClass="UILabel"/>
                <relationship kind="outlet" name="subclinicTestText" candidateClass="NSString"/>
            </relationships>
        </class>
    </classes>
    <simulatedMetricsContainer key="defaultSimulatedMetrics">
        <simulatedStatusBarMetrics key="statusBar" statusBarStyle="blackTranslucent"/>
        <simulatedOrientationMetrics key="orientation"/>
        <simulatedScreenMetrics key="destination"/>
    </simulatedMetricsContainer>
</document>